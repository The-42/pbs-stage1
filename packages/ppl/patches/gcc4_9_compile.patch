diff --git a/src/CO_Tree.cc b/src/CO_Tree.cc
index 1f57df3..936fbf7 100644
--- a/src/CO_Tree.cc
+++ b/src/CO_Tree.cc
@@ -933,7 +933,7 @@ PPL::CO_Tree
     --subtree_size;
   }
 
-  ptrdiff_t distance = first_unused_index - indexes;
+  std::ptrdiff_t distance = first_unused_index - indexes;
   PPL_ASSERT(distance >= 0);
   return static_cast<dimension_type>(distance);
 }
diff --git a/src/CO_Tree.defs.hh b/src/CO_Tree.defs.hh
index d02b467..987e968 100644
--- a/src/CO_Tree.defs.hh
+++ b/src/CO_Tree.defs.hh
@@ -159,7 +159,7 @@ public:
 
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const data_type value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef data_type_const_reference reference;
 
@@ -314,7 +314,7 @@ public:
 
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef data_type value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef value_type& reference;
 
diff --git a/src/CO_Tree.inlines.hh b/src/CO_Tree.inlines.hh
index 4722204..990f4da 100644
--- a/src/CO_Tree.inlines.hh
+++ b/src/CO_Tree.inlines.hh
@@ -31,7 +31,7 @@ CO_Tree::dfs_index(const_iterator itr) const {
   PPL_ASSERT(itr.current_index != 0);
   PPL_ASSERT(itr.current_index >= indexes + 1);
   PPL_ASSERT(itr.current_index <= indexes + reserved_size);
-  const ptrdiff_t index = itr.current_index - indexes;
+  const std::ptrdiff_t index = itr.current_index - indexes;
   return static_cast<dimension_type>(index);
 }
 
@@ -40,7 +40,7 @@ CO_Tree::dfs_index(iterator itr) const {
   PPL_ASSERT(itr.current_index != 0);
   PPL_ASSERT(itr.current_index >= indexes + 1);
   PPL_ASSERT(itr.current_index <= indexes + reserved_size);
-  const ptrdiff_t index = itr.current_index - indexes;
+  const std::ptrdiff_t index = itr.current_index - indexes;
   return static_cast<dimension_type>(index);
 }
 
@@ -768,7 +768,7 @@ CO_Tree::tree_iterator::follow_left_children_with_value() {
   p -= (offset - 1);
   while (*p == unused_index)
     ++p;
-  ptrdiff_t distance = p - tree.indexes;
+  std::ptrdiff_t distance = p - tree.indexes;
   PPL_ASSERT(distance >= 0);
   i = static_cast<dimension_type>(distance);
   offset = least_significant_one_mask(i);
@@ -783,7 +783,7 @@ CO_Tree::tree_iterator::follow_right_children_with_value() {
   p += (offset - 1);
   while (*p == unused_index)
     --p;
-  ptrdiff_t distance = p - tree.indexes;
+  std::ptrdiff_t distance = p - tree.indexes;
   PPL_ASSERT(distance >= 0);
   i = static_cast<dimension_type>(distance);
   offset = least_significant_one_mask(i);
diff --git a/src/Congruence_System.defs.hh b/src/Congruence_System.defs.hh
index caa7dac..05bbd04 100644
--- a/src/Congruence_System.defs.hh
+++ b/src/Congruence_System.defs.hh
@@ -249,7 +249,7 @@ public:
   class const_iterator
     : public std::iterator<std::forward_iterator_tag,
 			   Congruence,
-			   ptrdiff_t,
+			   std::ptrdiff_t,
 			   const Congruence*,
 			   const Congruence&> {
   public:
diff --git a/src/Constraint_System.defs.hh b/src/Constraint_System.defs.hh
index 0c5d973..5c1ff7d 100644
--- a/src/Constraint_System.defs.hh
+++ b/src/Constraint_System.defs.hh
@@ -609,7 +609,7 @@ for (Constraint_System::const_iterator i = cs.begin(),
 class Parma_Polyhedra_Library::Constraint_System_const_iterator
   : public std::iterator<std::forward_iterator_tag,
                          Constraint,
-                         ptrdiff_t,
+                         std::ptrdiff_t,
                          const Constraint*,
                          const Constraint&> {
 public:
diff --git a/src/Dense_Row.defs.hh b/src/Dense_Row.defs.hh
index e841d32..d63070b 100644
--- a/src/Dense_Row.defs.hh
+++ b/src/Dense_Row.defs.hh
@@ -433,7 +433,7 @@ public:
 
   typedef std::bidirectional_iterator_tag iterator_category;
   typedef Coefficient value_type;
-  typedef ptrdiff_t difference_type;
+  typedef std::ptrdiff_t difference_type;
   typedef value_type* pointer;
   typedef value_type& reference;
 
@@ -474,7 +474,7 @@ class Parma_Polyhedra_Library::Dense_Row::const_iterator {
 public:
 
   typedef const Coefficient value_type;
-  typedef ptrdiff_t difference_type;
+  typedef std::ptrdiff_t difference_type;
   typedef value_type* pointer;
   typedef Coefficient_traits::const_reference reference;
 
diff --git a/src/Generator_System.defs.hh b/src/Generator_System.defs.hh
index b534e61..710e24d 100644
--- a/src/Generator_System.defs.hh
+++ b/src/Generator_System.defs.hh
@@ -679,7 +679,7 @@ copy(gs.begin(), gs.end(), ostream_iterator<Generator>(cout, "\n"));
 class Parma_Polyhedra_Library::Generator_System_const_iterator
   : public std::iterator<std::forward_iterator_tag,
         Generator,
-        ptrdiff_t,
+        std::ptrdiff_t,
         const Generator*,
         const Generator&> {
 public:
diff --git a/src/Grid_Generator_System.defs.hh b/src/Grid_Generator_System.defs.hh
index 6827233..da31ff5 100644
--- a/src/Grid_Generator_System.defs.hh
+++ b/src/Grid_Generator_System.defs.hh
@@ -277,7 +277,7 @@ public:
   class const_iterator
     : public std::iterator<std::forward_iterator_tag,
 			   Grid_Generator,
-			   ptrdiff_t,
+			   std::ptrdiff_t,
 			   const Grid_Generator*,
 			   const Grid_Generator&> {
   public:
diff --git a/src/Linear_Expression.defs.hh b/src/Linear_Expression.defs.hh
index e9ad2d6..2f43e7d 100644
--- a/src/Linear_Expression.defs.hh
+++ b/src/Linear_Expression.defs.hh
@@ -502,7 +502,7 @@ public:
   public:
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const Coefficient value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef Coefficient_traits::const_reference reference;
 
diff --git a/src/Linear_Expression_Interface.defs.hh b/src/Linear_Expression_Interface.defs.hh
index 6739c55..a446358 100644
--- a/src/Linear_Expression_Interface.defs.hh
+++ b/src/Linear_Expression_Interface.defs.hh
@@ -65,7 +65,7 @@ public:
   public:
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const Coefficient value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef Coefficient_traits::const_reference reference;
 
diff --git a/src/ppl.hh.dist b/src/ppl.hh.dist
index 61b9272..4ed6345 100644
--- a/src/ppl.hh.dist
+++ b/src/ppl.hh.dist
@@ -20151,7 +20151,7 @@ public:
 
   typedef std::bidirectional_iterator_tag iterator_category;
   typedef Coefficient value_type;
-  typedef ptrdiff_t difference_type;
+  typedef std::ptrdiff_t difference_type;
   typedef value_type* pointer;
   typedef value_type& reference;
 
@@ -20192,7 +20192,7 @@ class Parma_Polyhedra_Library::Dense_Row::const_iterator {
 public:
 
   typedef const Coefficient value_type;
-  typedef ptrdiff_t difference_type;
+  typedef std::ptrdiff_t difference_type;
   typedef value_type* pointer;
   typedef Coefficient_traits::const_reference reference;
 
@@ -20974,7 +20974,7 @@ public:
 
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const data_type value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef data_type_const_reference reference;
 
@@ -21129,7 +21129,7 @@ public:
 
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef data_type value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef value_type& reference;
 
@@ -22369,7 +22369,7 @@ CO_Tree::dfs_index(const_iterator itr) const {
   PPL_ASSERT(itr.current_index != 0);
   PPL_ASSERT(itr.current_index >= indexes + 1);
   PPL_ASSERT(itr.current_index <= indexes + reserved_size);
-  const ptrdiff_t index = itr.current_index - indexes;
+  const std::ptrdiff_t index = itr.current_index - indexes;
   return static_cast<dimension_type>(index);
 }
 
@@ -22378,7 +22378,7 @@ CO_Tree::dfs_index(iterator itr) const {
   PPL_ASSERT(itr.current_index != 0);
   PPL_ASSERT(itr.current_index >= indexes + 1);
   PPL_ASSERT(itr.current_index <= indexes + reserved_size);
-  const ptrdiff_t index = itr.current_index - indexes;
+  const std::ptrdiff_t index = itr.current_index - indexes;
   return static_cast<dimension_type>(index);
 }
 
@@ -23106,7 +23106,7 @@ CO_Tree::tree_iterator::follow_left_children_with_value() {
   p -= (offset - 1);
   while (*p == unused_index)
     ++p;
-  ptrdiff_t distance = p - tree.indexes;
+  std::ptrdiff_t distance = p - tree.indexes;
   PPL_ASSERT(distance >= 0);
   i = static_cast<dimension_type>(distance);
   offset = least_significant_one_mask(i);
@@ -23121,7 +23121,7 @@ CO_Tree::tree_iterator::follow_right_children_with_value() {
   p += (offset - 1);
   while (*p == unused_index)
     --p;
-  ptrdiff_t distance = p - tree.indexes;
+  std::ptrdiff_t distance = p - tree.indexes;
   PPL_ASSERT(distance >= 0);
   i = static_cast<dimension_type>(distance);
   offset = least_significant_one_mask(i);
@@ -24749,7 +24749,7 @@ public:
   public:
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const Coefficient value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef Coefficient_traits::const_reference reference;
 
@@ -27158,7 +27158,7 @@ public:
   public:
     typedef std::bidirectional_iterator_tag iterator_category;
     typedef const Coefficient value_type;
-    typedef ptrdiff_t difference_type;
+    typedef std::ptrdiff_t difference_type;
     typedef value_type* pointer;
     typedef Coefficient_traits::const_reference reference;
 
@@ -42610,7 +42610,7 @@ for (Constraint_System::const_iterator i = cs.begin(),
 class Parma_Polyhedra_Library::Constraint_System_const_iterator
   : public std::iterator<std::forward_iterator_tag,
                          Constraint,
-                         ptrdiff_t,
+                         std::ptrdiff_t,
                          const Constraint*,
                          const Constraint&> {
 public:
@@ -43325,7 +43325,7 @@ public:
   class const_iterator
     : public std::iterator<std::forward_iterator_tag,
 			   Congruence,
-			   ptrdiff_t,
+			   std::ptrdiff_t,
 			   const Congruence*,
 			   const Congruence&> {
   public:
@@ -45408,7 +45408,7 @@ copy(gs.begin(), gs.end(), ostream_iterator<Generator>(cout, "\n"));
 class Parma_Polyhedra_Library::Generator_System_const_iterator
   : public std::iterator<std::forward_iterator_tag,
         Generator,
-        ptrdiff_t,
+        std::ptrdiff_t,
         const Generator*,
         const Generator&> {
 public:
@@ -54611,7 +54611,7 @@ public:
   class const_iterator
     : public std::iterator<std::forward_iterator_tag,
 			   Grid_Generator,
-			   ptrdiff_t,
+			   std::ptrdiff_t,
 			   const Grid_Generator*,
 			   const Grid_Generator&> {
   public:
